{"version":3,"sources":["UI/Widgets/Widget.tsx","UI/Dialogs/Dialog.tsx","Models/Dice.ts","Models/Attribute.ts","Models/Fated.ts","Models/Blessings.ts","Models/Character.ts","UI/Widgets/AttributesWidget.tsx","UI/Widgets/SkillsWidget.tsx","Models/Skill.ts","UI/Widgets/TotemWidget.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Widget","header","body","className","Dialog","props","updateUICharacter","map","setState","oldState","character","saveChanges","state","close","dialogState","onClose","updateUI","uiState","dialog","isOpen","node","this","role","type","aria-label","onClick","aria-hidden","data-dismiss","React","Component","CreateDie","size","name","GetDiceFromAttributeTotal","value","Dice","Math","ceil","GetDefaultAttributes","defaults","shortName","isMental","isPhysical","defaultFated","attribute","find","x","GetDefaultFated","defaultBlessings","effect","level","fated","GetAttributeTotal","inCity","attributes","get","GetAttributeSkillTotal","totem","skills","reduce","total","skill","WidgetHeader","openDialog","char","update","editMode","updateCharacter","WidgetBody","AttributeWidgetRow","baseAttributeElement","baseValue","defaultValue","onChange","event","newVal","target","valueAsNumber","isNaN","oldChar","newAttributes","Map","set","d","appControls","skillLevelElement","max","min","s","model","WidgetBodyRow","blessings","b","App","ui","oncloseCallback","AppControls","WidgetProps","player","age","gender","bio","a","AttributeWidgetConstructor","BlessingsWidgetConstructor","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6f0714e9.chunk.js","sourcesContent":["import React, { FunctionComponent, ReactNode } from \"react\";\r\nimport { AppControls, AppState } from \"../../App\";\r\n\r\nexport type WidgetConstructor = (props:WidgetProps) => Widget\r\n\r\nexport interface Widget {\r\n  header: ReactNode;\r\n  body: ReactNode;\r\n  className: string;\r\n}\r\n\r\nexport interface WidgetProps {\r\n  appControls: AppControls,\r\n  state: AppState,\r\n  editMode:boolean\r\n}\r\n\r\nexport const Widget: FunctionComponent<Widget> = ({\r\n  header,\r\n  body,\r\n  className,\r\n}) => (\r\n  <div className={`card ${className ? className : \"\"}`}>\r\n    <div className=\"card-header\">{header} </div>\r\n    <div className=\"card-body\">{body}</div>\r\n  </div>\r\n);\r\n","import React, { ReactNode } from \"react\";\r\nimport \"./Dialog.css\";\r\nimport { Character } from \"../../Models/Character\";\r\nimport { Update, UIState } from \"../../App\";\r\n\r\ntype DialogProps = {\r\n  dialogState: DialogParams;\r\n  character: Character;\r\n  saveChanges:Update<Character>\r\n  updateUI:Update<UIState>\r\n};\r\n\r\nexport type DialogBody = (character: Character, update: Update<Character>) => ReactNode;\r\n\r\nexport type DialogParams = {\r\n  isOpen: boolean;\r\n  onClose?: () => void;\r\n  node: DialogBody;\r\n};\r\n\r\ntype DialogState = {\r\n  character: Character;\r\n};\r\n\r\nexport class Dialog extends React.Component<DialogProps, DialogState> {\r\n  constructor(props: DialogProps) {\r\n    super(props);\r\n\r\n    this.state = { character: props.character };\r\n  }\r\n\r\n  updateUICharacter: Update<Character> = (map) => {\r\n    this.setState((oldState) => ({ ...oldState, character: map(oldState.character) }));\r\n  };\r\n\r\n  saveChanges = () => {\r\n    this.props.saveChanges(() => this.state.character);\r\n    this.close();\r\n  }\r\n\r\n  close = \r\n         () => {\r\n          if (this.props.dialogState.onClose) this.props.dialogState.onClose();\r\n          this.props.updateUI((uiState) => ({\r\n            ...uiState,\r\n            dialog: { isOpen: false, node: () => null, close: () => {} },\r\n          }));\r\n          this.updateUICharacter(() => this.props.character)\r\n        };\r\n\r\n  render() {\r\n    const { dialogState } = this.props;\r\n    const { character } = this.state;\r\n    if (!dialogState.isOpen) return null;\r\n    return (\r\n      <div className='dialog-backdrop'>\r\n        <div className='modal-dialog' role='document'>\r\n          <div className='modal-content'>\r\n            <div className='modal-header'>\r\n              <h5 className='modal-title'>Modal title</h5>\r\n              <button type='button' className='close' aria-label='Close' onClick={this.close}>\r\n                <span aria-hidden='true'>&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className='modal-body'>{dialogState.node(character, this.updateUICharacter)}</div>\r\n            <div className='modal-footer'>\r\n              <button type='button' className='btn btn-primary' onClick={this.saveChanges}>\r\n                Save changes\r\n              </button>\r\n              <button type='button' className='btn btn-secondary' data-dismiss='modal' onClick={this.close}>\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export interface Dice {\r\n  name: string;\r\n  size: number;\r\n}\r\n\r\nexport function CreateDie(size: number): Dice {\r\n  return { name:`d${size}`, size: size };\r\n}\r\n\r\nexport function Roll(dice: Dice): number {\r\n  return Math.ceil(Math.random() * dice.size);\r\n}\r\n\r\nexport interface PoolResult {\r\n  [key: number]: number;\r\n}\r\n\r\nexport function RollPool(dice: Dice[]) {\r\n  return dice.map(Roll).reduce((acc, num, _) => {\r\n    acc[num] = ++acc[num] || 1;\r\n    return acc;\r\n  }, {} as PoolResult);\r\n}\r\n","import * as Dice from \"./Dice\";\r\n\r\nexport interface Attribute {\r\n  name: string;\r\n  shortName: string;\r\n  isPhysical: boolean;\r\n  isMental: boolean;\r\n}\r\n\r\nexport function GetDiceFromAttributeTotal(value: number): Dice.Dice[] {\r\n  if (value <= 0) return [Dice.CreateDie(2)];\r\n  if (value >= 36) return [Dice.CreateDie(20)];\r\n  return [Dice.CreateDie(Math.ceil(value / 6) * 2)];\r\n}\r\n\r\nexport function GetDefaultAttributes(): Attribute[] {\r\n  return defaults;\r\n}\r\n\r\n  const defaults = [\r\n    {\r\n      name: \"Power\",\r\n      shortName: \"Pow\",\r\n      isMental: false,\r\n      isPhysical: true,\r\n    },\r\n    {\r\n      name: \"Finesse\",\r\n      shortName: \"Fin\",\r\n      isMental: false,\r\n      isPhysical: true,\r\n    },\r\n    {\r\n      name: \"Resilience\",\r\n      shortName: \"Res\",\r\n      isMental: false,\r\n      isPhysical: true,\r\n    },\r\n    {\r\n      name: \"Intellect\",\r\n      shortName: \"Int\",\r\n      isMental: false,\r\n      isPhysical: true,\r\n    },\r\n    {\r\n      name: \"Wits\",\r\n      shortName: \"Wit\",\r\n      isMental: false,\r\n      isPhysical: true,\r\n    },\r\n    {\r\n      name: \"Presence\",\r\n      shortName: \"Pre\",\r\n      isMental: false,\r\n      isPhysical: true,\r\n    },\r\n  ];\r\n","import {Attribute, GetDefaultAttributes} from \"./Attribute\"\r\n\r\nexport interface Fated {\r\n    name:string,\r\n    attribute:Attribute\r\n}\r\n\r\nconst defaultFated:Fated[] = [{\r\n    name: \"Warick\",\r\n    attribute: GetDefaultAttributes().find(x => x.shortName === \"Pow\")!\r\n}]\r\n\r\nexport function GetDefaultFated() { return defaultFated };","import { Fated, GetDefaultFated } from \"./Fated\";\r\n\r\nexport interface Blessing {\r\n  name: string;\r\n  fated: Fated;\r\n  level: number;\r\n  effect: string;\r\n}\r\n\r\nexport function GetDefaultBlessings() {\r\n    return defaultBlessings;\r\n}\r\n\r\nconst defaultBlessings: Blessing[] = [\r\n  {\r\n    name: \"Strengthen\",\r\n    effect:\r\n      \"Add an additional Power attribute die to a Power action's roll total.\",\r\n    level: 1,\r\n    fated: GetDefaultFated().find((x) => x.attribute.shortName === \"Pow\")!,\r\n  },\r\n  {\r\n    name: \"Flex\",\r\n    effect:\r\n      \"Increase one adjacent entity’s Power attribute die size by two pips until the next rest.\",\r\n    level: 1,\r\n    fated: GetDefaultFated().find((x) => x.attribute.shortName === \"Pow\")!,\r\n  },\r\n  {\r\n    name: \"Bulk\",\r\n    effect:\r\n      \"You or one adjacent entity can use the sum of two Power dice you roll as the roll total for any one physical action.\",\r\n    level: 1,\r\n    fated: GetDefaultFated().find((x) => x.attribute.shortName === \"Pow\")!,\r\n  },\r\n  {\r\n    name: \"Punish\",\r\n    effect:\r\n      \"Double the roll total of the next physical action against one selected entity.\",\r\n    level: 1,\r\n    fated: GetDefaultFated().find((x) => x.attribute.shortName === \"Pow\")!,\r\n  },\r\n  {\r\n    name: \"Overpower\",\r\n    effect:\r\n      \"One selected entity takes their lowest die value for their next three Power actions.\",\r\n    level: 1,\r\n    fated: GetDefaultFated().find((x) => x.attribute.shortName === \"Pow\")!,\r\n  },\r\n  {\r\n    name: \"Retaliate\",\r\n    effect:\r\n      \"Inflict degrees of a physical status condition you have on up to three selected targets within an encounter - 1 degree on three entities, 2 degrees on 2 entities, three degrees on 1 entity. These do not affect spirit or adrenaline\",\r\n    level: 1,\r\n    fated: GetDefaultFated().find((x) => x.attribute.shortName === \"Pow\")!,\r\n  },\r\n];\r\n","import { Totem } from \"./Totem\";\r\nimport { Skill } from \"./Skill\";\r\nimport { Attribute, GetDefaultAttributes } from \"./Attribute\";\r\nimport { GetDefaultFated } from \"./Fated\";\r\nimport { GetDefaultBlessings } from \"./Blessings\";\r\n\r\nexport interface Character {\r\n  name: string;\r\n  player: string;\r\n  age: number;\r\n  gender: string;\r\n  bio: string;\r\n  attributes: Map<Attribute, number>;\r\n  skills: Skill[];\r\n  totem: Totem;\r\n}\r\n\r\nexport function GetAttributeTotal(\r\n  character: Character,\r\n  attribute: Attribute,\r\n  inCity:boolean\r\n): number {\r\n  return (\r\n    (character.attributes.get(attribute) || 0) +\r\n    GetAttributeSkillTotal(character, attribute)\r\n    + (!inCity && character.totem.fated.attribute === attribute ? 6 : 0)\r\n  );\r\n}\r\n\r\nexport function GetAttributeSkillTotal(\r\n  character: Character,\r\n  attribute: Attribute\r\n): number {\r\n  return character.skills.reduce(\r\n    (total, skill) => total + (skill.attribute === attribute ? skill.level : 0),\r\n    0\r\n  );\r\n}\r\n\r\nexport function CreateTestCharacter(): Character {\r\n  return {\r\n    name: \"test\",\r\n    player: \"test\",\r\n    age: 3,\r\n    gender: \"test\",\r\n    bio: \"test\",\r\n    attributes: new Map(GetDefaultAttributes().map((a) => [a, 6])),\r\n    skills: [\r\n      {\r\n        attribute: GetDefaultAttributes()[0],\r\n        level: 6,\r\n        name: \"Jumping\",\r\n      },\r\n      {\r\n        attribute: GetDefaultAttributes()[0],\r\n        level: 4,\r\n        name: \"Climbing\",\r\n      },\r\n      {\r\n        attribute: GetDefaultAttributes()[0],\r\n        level: 3,\r\n        name: \"Parkour\",\r\n      },\r\n    ],\r\n    totem: { blessings: GetDefaultBlessings(), fated: GetDefaultFated()[0] },\r\n  };\r\n}\r\n","import { Attribute, GetDefaultAttributes, GetDiceFromAttributeTotal } from \"../../Models/Attribute\";\r\nimport React, { FunctionComponent, ReactElement, Fragment } from \"react\";\r\nimport { Character, GetAttributeSkillTotal, GetAttributeTotal } from \"../../Models/Character\";\r\nimport { Update, openDialog } from \"../../App\";\r\nimport { WidgetConstructor } from \"./Widget\";\r\n\r\ntype AttributeBodyProps = {\r\n  character: Character;\r\n  editMode: boolean;\r\n  updateCharacter: Update<Character>;\r\n};\r\n\r\ntype AttributeRowProps = {\r\n  character: Character;\r\n  attribute: Attribute;\r\n  editMode: boolean;\r\n  updateCharacter: Update<Character>;\r\n};\r\n\r\ntype AttributeHeaderProps = {\r\n  character: Character;\r\n  openDialog: openDialog;\r\n};\r\n\r\nexport const AttributeWidgetConstructor:WidgetConstructor = ({appControls, state}) => {\r\nreturn ({\r\n  header: <WidgetHeader character={state.character} openDialog={appControls.openDialog} />,\r\n  body: <WidgetBody character={state.character} updateCharacter={appControls.updateCharacter} editMode={false} />,\r\n  className: \"attribute-widget\"\r\n})\r\n}\r\n\r\nconst WidgetHeader: FunctionComponent<AttributeHeaderProps> = ({ openDialog }) => (\r\n  <div className='header'>\r\n    Attributes\r\n    <button\r\n      className='btn-primary btn-sm btn right'\r\n      onClick={() => {\r\n        openDialog((char, update: Update<Character>) => (\r\n          <WidgetBody {...{ editMode: true, character: char, updateCharacter: update }} />\r\n        ));\r\n      }}\r\n    >\r\n      Edit\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport const className = \"attribute-widget\"\r\n\r\nexport const WidgetBody: FunctionComponent<AttributeBodyProps> = ({\r\n  character,\r\n  editMode,\r\n  updateCharacter,\r\n}) => (\r\n  <div className='attribute-grid'>\r\n    <div className='attribute-header'>\r\n      <div className='attribute-title'> Name </div>\r\n      <div className='attribute-base'> Base </div>\r\n      <div className='attribute-skills'> Skills </div>\r\n      <div className='attribute-total'> Total </div>\r\n      <div className='attribute-dice'> Dice </div>\r\n    </div>\r\n    {GetDefaultAttributes().map((attribute) => (\r\n      <AttributeWidgetRow\r\n        updateCharacter={updateCharacter}\r\n        editMode={editMode}\r\n        attribute={attribute}\r\n        character={character}\r\n      />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nconst AttributeWidgetRow: FunctionComponent<AttributeRowProps> = ({\r\n  attribute,\r\n  character,\r\n  editMode,\r\n  updateCharacter,\r\n}) => {\r\n  const baseValue = character.attributes.get(attribute);\r\n  let baseAttributeElement: ReactElement;\r\n  if (editMode)\r\n    baseAttributeElement = (\r\n      <input\r\n        type='number'\r\n        defaultValue={baseValue}\r\n        className={`attribute-base`}\r\n        onChange={(event) => {\r\n          const newVal = event.target.valueAsNumber;\r\n          if (!isNaN(newVal))\r\n            updateCharacter((oldChar: Character) => {\r\n              const newAttributes = new Map(oldChar.attributes);\r\n              newAttributes.set(attribute, newVal);\r\n              return { ...oldChar, attributes: newAttributes };\r\n            });\r\n        }}\r\n      />\r\n    );\r\n  else baseAttributeElement = <Fragment> {baseValue} </Fragment>;\r\n\r\n  return (\r\n    <div className='attribute-row'>\r\n      <div className={`attribute-title ${attribute.name}-Header`}>{attribute.name}</div>\r\n      <div className={`attribute-base ${attribute.name}`}> {baseAttributeElement} </div>\r\n      <div className={`attribute-skills ${attribute.name}`}>{GetAttributeSkillTotal(character, attribute)}</div>\r\n      <div className={`attribute-total ${attribute.name}`}>{GetAttributeTotal(character, attribute, true)}</div>\r\n      <div className={`attribute-dice ${attribute.name}`}>\r\n        {GetDiceFromAttributeTotal(GetAttributeTotal(character, attribute, true)).map((d) => d.name)} (\r\n        {GetDiceFromAttributeTotal(GetAttributeTotal(character, attribute, false)).map((d) => d.name)})\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FunctionComponent, ReactElement, Fragment } from \"react\";\r\nimport { WidgetConstructor, WidgetProps } from \"./Widget\";\r\nimport { Skill, ToDie } from \"../../Models/Skill\";\r\nimport { Character } from \"../../Models/Character\";\r\nimport { AppControls } from \"../../App\";\r\n\r\nexport const SkillsWidgetConstructor: WidgetConstructor = (props) => ({\r\n  header: <WidgetHeader {...props} />,\r\n  body: <WidgetBody {...props} />,\r\n  className: \"skills-widget\",\r\n});\r\n\r\nconst WidgetHeader: FunctionComponent<WidgetProps> = ({ appControls, state }) => (\r\n  <div className='header'>\r\n    Skills\r\n    <button\r\n      className='btn-primary btn-sm btn right'\r\n      onClick={() => {\r\n        appControls.openDialog((character, updateCharacter) => (\r\n          <WidgetBody\r\n            editMode={true}\r\n            appControls={{ ...appControls, updateCharacter }}\r\n            state={{ ...state, character }}\r\n          />\r\n        ));\r\n      }}\r\n    >\r\n      Edit\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst WidgetBody: FunctionComponent<WidgetProps> = ({ state, editMode, appControls }) => {\r\n  return (\r\n    <div className='skill-grid'>\r\n      <div className='skill-header'>\r\n        <div className='skill-name'>Skill Name</div>\r\n        <div className='skill-level'> Level </div>\r\n        <div className='skill-attribute'> Attribute </div>\r\n        <div className='skill-dice'> Dice </div>\r\n      </div>\r\n      {state.character.skills.map((skill) => WidgetBodyRow(skill, editMode, appControls))}\r\n    </div>\r\n  );\r\n};\r\nfunction WidgetBodyRow(skill: Skill, editMode: boolean, { updateCharacter }: AppControls): JSX.Element {\r\n  const baseValue = skill.level;\r\n  let skillLevelElement: ReactElement;\r\n  if (editMode)\r\n    skillLevelElement = (\r\n      <input\r\n        type='number'\r\n        max={6}\r\n        min={2}\r\n        defaultValue={baseValue}\r\n        className={`skill-level`}\r\n        onChange={(event) => {\r\n          const newVal = event.target.valueAsNumber;\r\n          if (!isNaN(newVal))\r\n            updateCharacter((oldChar: Character) => {\r\n              return { ...oldChar, skills: oldChar.skills.map((s) => (s === skill ? { ...skill, level: newVal } : s)) };\r\n            });\r\n        }}\r\n      />\r\n    );\r\n  else skillLevelElement = <Fragment> {baseValue} </Fragment>;\r\n  return (\r\n    <div className='skill-row'>\r\n      <div className={`skill-name`}> {skill.name} </div>\r\n      <div className={`skill-level`}> {skillLevelElement} </div>\r\n      <div className={`skill-attribute`}> {skill.attribute.name} </div>\r\n      <div className={`skill-dice`}> {ToDie(skill).name} </div>\r\n    </div>\r\n  );\r\n}\r\n","import * as Dice from \"./Dice\";\r\nimport { Attribute } from \"./Attribute\";\r\n\r\nexport interface Skill {\r\n  name: string;\r\n  level: number;\r\n  attribute: Attribute;\r\n}\r\n\r\nexport function ToDie(model: Skill) {\r\n  return Dice.CreateDie(model.level * 2);\r\n}\r\n","import * as Character from \"../../Models/Character\";\r\nimport React, { FunctionComponent } from \"react\";\r\nimport { WidgetConstructor } from \"./Widget\";\r\n\r\ntype BlessingsBodyProps = {\r\n  character: Character.Character;\r\n};\r\ntype BlessingsHeaderProps = {\r\n  character: Character.Character;\r\n};\r\n\r\nexport const BlessingsWidgetConstructor:WidgetConstructor = ({state}) => \r\n({\r\n  header: <WidgetHeader character={state.character} />,\r\n  body: <WidgetBody character={state.character} />,\r\n  className: \"blessing-widget\"\r\n})\r\n\r\n\r\nconst WidgetHeader: FunctionComponent<BlessingsHeaderProps> = ({\r\n  character,\r\n}) => (\r\n  <div className={`header ${character.totem.fated.attribute.name}`}>\r\n    Totem - {character.totem.fated.name}\r\n    <button className=\"btn-primary btn-sm btn right\"> Edit </button>\r\n  </div>\r\n);\r\n\r\nconst WidgetBody: FunctionComponent<BlessingsBodyProps> = ({\r\n  character,\r\n}) => (\r\n  <div className=\"blessing-grid\">\r\n    <div className=\"blessing-header\">\r\n      <div className=\"blessing-name\"> Name </div>\r\n      <div className=\"blessing-fated\"> Fated </div>\r\n      <div className=\"blessing-level\"> Level </div>\r\n      <div className=\"blessing-effect\"> Effect </div>\r\n    </div>\r\n    {character.totem.blessings.map((b) => (\r\n      <div className=\"blessing-row\">\r\n        <div className=\"blessing-name\"> {b.name} </div>\r\n        <div className=\"blessing-fated\"> {b.fated.name} </div>\r\n        <div className=\"blessing-level\"> {b.level} </div>\r\n        <div className=\"blessing-effect\"> {b.effect} </div>\r\n      </div>\r\n    ))}\r\n  </div>\r\n);\r\n","import { Widget, WidgetProps } from \"./UI/Widgets/Widget\";\r\nimport React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport { Dialog, DialogParams, DialogBody } from \"./UI/Dialogs/Dialog\";\r\nimport { CreateTestCharacter, Character } from \"./Models/Character\";\r\nimport { AttributeWidgetConstructor } from \"./UI/Widgets/AttributesWidget\";\r\nimport { SkillsWidgetConstructor } from \"./UI/Widgets/SkillsWidget\";\r\nimport { BlessingsWidgetConstructor } from \"./UI/Widgets/TotemWidget\";\r\n\r\nexport interface AppState {\r\n  ui: UIState;\r\n  character: Character;\r\n}\r\n\r\nexport interface AppControls {\r\n  openDialog: openDialog;\r\n  updateCharacter: Update<Character>;\r\n}\r\n\r\nexport type openDialog = (node: DialogBody, oncloseCallback?: () => void) => void;\r\nexport type Update<T> = (update: (old: T) => T) => void;\r\n\r\nexport interface UIState {\r\n  dialog: DialogParams;\r\n}\r\n\r\nclass App extends React.Component<{}, AppState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      character: CreateTestCharacter(),\r\n      ui: {\r\n        dialog: {\r\n          isOpen: false,\r\n          onClose: () => {},\r\n          node: () => null,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  updateUI = (map: (newUi: UIState) => UIState) => {\r\n    this.setState((state) => ({ ...state, ui: map(state.ui) }));\r\n  };\r\n\r\n  updateCharacter = (map: (newCharacter: Character) => Character) => {\r\n    this.setState((state) => ({ ...state, character: map(state.character) }));\r\n  };\r\n\r\n  openDialog: openDialog = (node, oncloseCallback?) => {\r\n    this.updateUI((uiState) => ({\r\n      ...uiState,\r\n      dialog: {\r\n        isOpen: true,\r\n        node: node,\r\n        onClose: oncloseCallback,\r\n      },\r\n    }));\r\n  };\r\n\r\n  AppControls: AppControls = {\r\n    openDialog: this.openDialog,\r\n    updateCharacter: this.updateCharacter,\r\n  };\r\n\r\n  WidgetProps: ()=> WidgetProps  = () => ({\r\n    appControls: this.AppControls,\r\n    state: this.state,\r\n    editMode: false,\r\n  })\r\n\r\n  render() {\r\n    return (\r\n      <div className='App card-columns'>\r\n        <Widget {...AttributeWidgetConstructor(this.WidgetProps())}></Widget>\r\n        <Widget {...SkillsWidgetConstructor(this.WidgetProps())}></Widget>\r\n        <Widget {...BlessingsWidgetConstructor(this.WidgetProps())}></Widget>\r\n        <Dialog\r\n          updateUI={this.updateUI}\r\n          saveChanges={this.updateCharacter}\r\n          character={this.state.character}\r\n          dialogState={this.state.ui.dialog}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}