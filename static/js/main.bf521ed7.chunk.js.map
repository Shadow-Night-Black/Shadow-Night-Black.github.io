{"version":3,"sources":["UI/Dialogs/Dialog.tsx","UI/Widgets/Widget.tsx","Models/Dice.ts","Models/Attribute.ts","Models/Skill.ts","Helpers/Collections.ts","Models/Fated.ts","Models/Blessings.ts","Models/Character.ts","UI/Widgets/AttributesWidget.tsx","UI/Widgets/SkillsWidget.tsx","UI/Controls/Dropdown.tsx","UI/Widgets/TotemWidget.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Dialog","updateUI","map","props","old","dialog","model","saveChanges","appControls","update","dialogState","close","uiState","isOpen","body","header","setState","oldState","closed","this","state","className","role","editMode","type","aria-label","onClick","aria-hidden","data-dismiss","React","Component","Widget","openDialog","EditInDialogButton","CreateDie","size","name","GetDiceFromAttributeTotal","value","Dice","Math","floor","GetDefaultAttributes","defaults","shortName","isMental","isPhysical","a","i","key","ToDie","level","NewSkill","character","skill","collection","attribute","skills","reduce","acc","val","defaultFated","x","GetDefaultFated","GetDefaultBlessings","defaultBlessings","fated","GetAttributeTotal","inCity","attributes","get","GetAttributeSkillTotal","totem","total","defaultSkillsInfo","CreateTestCharacter","char","player","age","gender","bio","Map","blessings","forEach","push","filter","includes","slice","JsonToCharacter","json","JSON","parse","version","data","Error","AttributeWidgetRow","baseAttributeElement","updateCharacter","baseValue","defaultValue","onChange","event","newVal","target","valueAsNumber","isNaN","oldChar","newAttributes","set","d","AttributeWidgetConstructor","SkillsWidget","remove","onBlur","e","max","min","newval","find","Number","EditBodyRow","pred","s","WidgetBodyRow","concat","RemoveOption","BlessingsWidget","updateTotem","t","fatedDisplay","newKey","parseInt","f","join","addButton","length","b","blessing","console","log","effect","EditBlessingsRow","DisplayBlessingsRow","App","ui","updateModel","newState","localStorage","setItem","stringify","AppControls","WidgetProps","savedData","getItem","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bf521ed7.chunk.js","sourcesContent":["import React, { FunctionComponent } from \"react\";\r\nimport \"./Dialog.scss\";\r\nimport { Update, UIState, AppControls } from \"../../App\";\r\nimport { WidgetProps } from \"../Widgets/Widget\";\r\n\r\ntype DialogProps<T> = {\r\n  dialogState: DialogParams<T>;\r\n  appControls: AppControls<T>;\r\n  updateUI: Update<UIState<T>>;\r\n};\r\n\r\nexport type DialogSection<T> = FunctionComponent<WidgetProps<T>>\r\n\r\nexport type DialogParams<T> = {\r\n  isOpen: boolean;\r\n  body: DialogSection<T>\r\n  header: DialogSection<T>\r\n  model: T;\r\n};\r\n\r\nexport function EditInDialogButton<T>(appControls:AppControls<T>, header:DialogSection<T>, body:DialogSection<T> ) {\r\nreturn <button\r\n      className='btn-primary btn-sm btn '\r\n      onClick={() => {\r\n        appControls.openDialog(header, body);\r\n      }}\r\n    >\r\n      Edit\r\n    </button>\r\n}\r\n\r\n\r\nexport class Dialog<T> extends React.Component<DialogProps<T>, {}> {\r\n\r\n  updateUI: Update<T> = (map) => {\r\n    this.props.updateUI(old => ({...old, dialog:{...old.dialog, model:map(old.dialog.model)}}))\r\n  };\r\n\r\n  saveChanges = () => {\r\n      this.props.appControls.update(() => this.props.dialogState.model);\r\n      this.close();\r\n  };\r\n\r\n  close = () => {\r\n    this.props.updateUI((uiState) => ({\r\n      ...uiState,\r\n      dialog: {...this.props.dialogState, isOpen: false, body: () => null, header: () => null},\r\n    }));\r\n\r\n    this.setState((oldState) => ({...oldState, closed: true}));\r\n  };\r\n\r\n  render() {\r\n    const { dialogState } = this.props;\r\n    if (!dialogState.isOpen) return null;\r\n\r\n    const state = this.props.dialogState.model;\r\n    const appControls  = {...this.props.appControls, update: this.updateUI};\r\n\r\n    return (\r\n      <div className='dialog-backdrop'>\r\n        <div className='modal-dialog' role='document'>\r\n          <div className='modal-content'>\r\n            <div className='modal-header modal-title'>\r\n              <dialogState.header appControls={appControls} state={state} editMode={true} />\r\n              <button type='button' className='close' aria-label='Close' onClick={this.close}>\r\n                <span aria-hidden='true'>&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className='modal-body'>\r\n\r\n              <dialogState.body appControls={appControls} state={state} editMode={true} /> </div>\r\n            <div className='modal-footer'>\r\n              <button type='button' className='btn btn-primary' onClick={this.saveChanges}>\r\n                Save changes\r\n              </button>\r\n              <button type='button' className='btn btn-secondary' data-dismiss='modal' onClick={this.close}>\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { AppControls } from \"../../App\";\r\nimport { EditInDialogButton } from \"../Dialogs/Dialog\";\r\n\r\nexport interface Widget<T> {\r\n  header: FunctionComponent<WidgetProps<T>>;\r\n  body: FunctionComponent<WidgetProps<T>>;\r\n  className: string;\r\n}\r\n\r\nexport interface WidgetProps<T> {\r\n  appControls: AppControls<T>;\r\n  state: T;\r\n  editMode: boolean;\r\n}\r\n\r\nexport function Widget<T> (props:WidgetProps<T> , { header, body, className }:Widget<T>) {return (\r\n  <div className={`card ${className ? className : \"\"}`}>\r\n    <div className='card-header'>{header(props)} {EditInDialogButton(props.appControls, header, body)} </div>\r\n    <div className='card-body'>{body(props)}</div>\r\n  </div>\r\n);}\r\n","export interface Dice {\r\n  name: string;\r\n  size: number;\r\n}\r\n\r\nexport function CreateDie(size: number): Dice {\r\n  return { name:`d${size}`, size: size };\r\n}\r\n\r\nexport function Roll(dice: Dice): number {\r\n  return Math.ceil(Math.random() * dice.size);\r\n}\r\n\r\nexport interface PoolResult {\r\n  [key: number]: number;\r\n}\r\n\r\nexport function RollPool(dice: Dice[]) {\r\n  return dice.map(Roll).reduce((acc, num, _) => {\r\n    acc[num] = ++acc[num] || 1;\r\n    return acc;\r\n  }, {} as PoolResult);\r\n}\r\n","import * as Dice from \"./Dice\";\r\nimport { Identable } from \"../Helpers/Collections\";\r\n\r\nexport type Attribute = Identable & AttributeData\r\n\r\ninterface AttributeData {\r\n  name: string;\r\n  shortName: string;\r\n  isPhysical: boolean;\r\n  isMental: boolean;\r\n}\r\n\r\nexport function GetDiceFromAttributeTotal(value: number): Dice.Dice[] {\r\n  if (value <= 0) return [Dice.CreateDie(2)];\r\n  if (value >= 36) return [Dice.CreateDie(20)];\r\n  return [Dice.CreateDie(2 + Math.floor(value/ 6) * 2)];\r\n}\r\n\r\nexport function GetDefaultAttributes(): Attribute[] {\r\n  return defaults;\r\n}\r\n\r\n  const defaults:Attribute[] = [\r\n    {\r\n      name: \"Power\",\r\n      shortName: \"Pow\",\r\n      isMental: false,\r\n      isPhysical: true,\r\n    },\r\n    {\r\n      name: \"Finesse\",\r\n      shortName: \"Fin\",\r\n      isMental: false,\r\n      isPhysical: true,\r\n    },\r\n    {\r\n      name: \"Resilience\",\r\n      shortName: \"Res\",\r\n      isMental: false,\r\n      isPhysical: true,\r\n    },\r\n    {\r\n      name: \"Intellect\",\r\n      shortName: \"Int\",\r\n      isMental: false,\r\n      isPhysical: true,\r\n    },\r\n    {\r\n      name: \"Wits\",\r\n      shortName: \"Wit\",\r\n      isMental: false,\r\n      isPhysical: true,\r\n    },\r\n    {\r\n      name: \"Presence\",\r\n      shortName: \"Pre\",\r\n      isMental: false,\r\n      isPhysical: true,\r\n    },\r\n  ].map((a, i) => ({...a, key:i}));\r\n","import * as Dice from \"./Dice\";\r\nimport { Attribute, GetDefaultAttributes } from \"./Attribute\";\r\nimport { Character } from \"./Character\";\r\nimport { Identable, nextId } from \"../Helpers/Collections\";\r\n\r\n\r\nexport type Skill = Identable & SkillData;\r\n\r\nexport function ToDie(model: Skill) {\r\n  return Dice.CreateDie(model.level * 2);\r\n}\r\n\r\nexport function NewSkill(character: Character, skill?:Partial<SkillData>): Skill {\r\n  return {\r\n    name: skill?.name ?? \"New Skill\",\r\n    level: skill?.level ?? 2,\r\n    attribute: skill?.attribute ?? GetDefaultAttributes()[0],\r\n    key: nextId(character.skills),\r\n  };\r\n}\r\n\r\ninterface SkillData{\r\n  name: string;\r\n  level: number;\r\n  attribute: Attribute;\r\n}","export type Identable = {key:number}\r\n\r\nexport function nextId(collection:Identable[]):number {\r\n    return collection.reduce((acc, val) => acc > val.key? acc : val.key, 0 ) + 1;\r\n}","import {Attribute, GetDefaultAttributes} from \"./Attribute\"\r\nimport Fateds from \"../Data/Fated.json\"\r\nimport { Identable } from \"../Helpers/Collections\";\r\n\r\nexport type Fated = FatedData & Identable;\r\ninterface FatedData  {\r\n    name:string,\r\n    attribute:Attribute\r\n}\r\n\r\nconst fatedData = Fateds;\r\nconst defaultFated = fatedData.map((x, i) => ({...x, attribute:GetDefaultAttributes()[x.attribute - 1], key:i}));\r\n\r\nexport function GetDefaultFated():Fated[] { return defaultFated };","import { Fated, GetDefaultFated } from \"./Fated\";\r\nimport { Identable } from \"../Helpers/Collections\";\r\nimport Blessings from \"../Data/Blessings.json\"\r\n\r\nexport type Blessing = BlessingData & Identable;\r\nexport type BlessingData = {\r\n  name: string;\r\n  fated: Fated;\r\n  level: number;\r\n  effect: string;\r\n};\r\n\r\nexport function GetDefaultBlessings(): Blessing[] {\r\n  return defaultBlessings;\r\n}\r\n\r\nconst blessingsData = Blessings;\r\n\r\nconst defaultBlessings = blessingsData.map((x, i) => ({ ...x, fated:GetDefaultFated()[x.fated-1], key: i }));\r\n\r\n\r\n/*\r\n$once\r\n[\r\n$each\r\n{\r\n\"name\": \"$1\",\r\n\"effect\": \"$2\",\r\n\"level\": $0,\r\n\"fated\": 1\r\n},\r\n{\r\n\"name\": \"$3\",\r\n\"effect\": \"$4\",\r\n\"level\": $0,\r\n\"fated\": 2\r\n},\r\n{\r\n\"name\": \"$5\",\r\n\"effect\": \"$6\",\r\n\"level\": $0,\r\n\"fated\": 3\r\n},\r\n{\r\n\"name\": \"$7\",\r\n\"effect\": \"$8\",\r\n\"level\": $0,\r\n\"fated\": 4\r\n},\r\n{\r\n\"name\": \"$9\",\r\n\"effect\": \"$10\",\r\n\"level\": $0,\r\n\"fated\": 5\r\n},\r\n{\r\n\"name\": \"$11\",\r\n\"effect\": \"$12\",\r\n\"level\": $0,\r\n\"fated\": 6\r\n},\r\n$once\r\n]\r\n*/","import { Totem } from \"./Totem\";\r\nimport { Skill, NewSkill } from \"./Skill\";\r\nimport { Attribute, GetDefaultAttributes } from \"./Attribute\";\r\nimport { GetDefaultFated } from \"./Fated\";\r\nimport { GetDefaultBlessings } from \"./Blessings\";\r\n\r\nexport interface Character {\r\n  name: string;\r\n  player: string;\r\n  age: number;\r\n  gender: string;\r\n  bio: string;\r\n  attributes: Map<Attribute, number>;\r\n  skills: Skill[];\r\n  totem: Totem;\r\n}\r\n\r\nexport function GetAttributeTotal(character: Character, attribute: Attribute, inCity: boolean): number {\r\n  return (\r\n    (character.attributes.get(attribute) || 0) +\r\n    GetAttributeSkillTotal(character, attribute) +\r\n    (!inCity && character.totem.fated[0]?.attribute.key === attribute.key ? 6 : 0)\r\n  );\r\n}\r\n\r\nexport function GetAttributeSkillTotal(character: Character, attribute: Attribute): number {\r\n  return character.skills.reduce((total, skill) => total + (skill.attribute.key === attribute.key ? skill.level : 0), 0);\r\n}\r\n\r\nconst defaultSkillsInfo = [\r\n  {\r\n    level: 6,\r\n    name: \"Jumping\",\r\n  },\r\n  {\r\n    level: 4,\r\n    name: \"Climbing\",\r\n  },\r\n  {\r\n    level: 3,\r\n    name: \"Parkour\",\r\n  },\r\n];\r\n\r\nexport function CreateTestCharacter(): Character {\r\n  const char: Character = {\r\n    name: \"test\",\r\n    player: \"test\",\r\n    age: 3,\r\n    gender: \"test\",\r\n    bio: \"test\",\r\n    attributes: new Map(GetDefaultAttributes().map((a) => [a, 6])),\r\n    skills: [],\r\n    totem: { blessings: [], fated: [GetDefaultFated()[0]] },\r\n  };\r\n  defaultSkillsInfo.forEach((x) => char.skills.push(NewSkill(char, x)));\r\n  char.totem.blessings = GetDefaultBlessings().filter(x => char.totem.fated.includes(x.fated)).slice(0,5);\r\n\r\n  return char;\r\n}\r\n\r\ntype VersionSaveData = {\r\n  version:1,\r\n  data:CharacterSaveDataV1\r\n}\r\n\r\ninterface CharacterSaveDataV1 {\r\n  name: string;\r\n  player: string;\r\n  age: number;\r\n  gender: string;\r\n  bio: string;\r\n  attributes: number[];\r\n  skills: Skill[];\r\n  totem: Totem;\r\n}\r\n\r\nexport function CharacterToJson(character:Character):string {\r\n  return JSON.stringify({version:1, data: {...character, attributes:GetDefaultAttributes().map(x => character.attributes.get(x))}})\r\n}\r\n\r\nexport function JsonToCharacter(json:string):Character {\r\n  const {version, data}:VersionSaveData = JSON.parse(json);\r\n  if (version === 1)\r\n    return {...data, attributes: new Map(GetDefaultAttributes().map((a, i) => [a, data.attributes[i]]))}\r\n\r\n    throw new Error(\"Invalid save data!\");\r\n}\r\n","import { Attribute, GetDefaultAttributes, GetDiceFromAttributeTotal } from \"../../Models/Attribute\";\r\nimport React, { FunctionComponent, ReactElement, Fragment } from \"react\";\r\nimport { Character, GetAttributeSkillTotal, GetAttributeTotal } from \"../../Models/Character\";\r\nimport { Update} from \"../../App\";\r\nimport \"./AttributesWidget.css\";\r\nimport { Widget, WidgetProps } from \"./Widget\";\r\n\r\n\r\ntype AttributeRowProps = {\r\n  character: Character;\r\n  attribute: Attribute;\r\n  editMode: boolean;\r\n  updateCharacter: Update<Character>;\r\n};\r\n\r\nconst WidgetHeader: FunctionComponent<{}> = () => (\r\n    <h5 className={\"modal-title\"}>Attributes</h5>\r\n);\r\n\r\nexport const className = \"attribute-widget\";\r\n\r\nexport const WidgetBody: FunctionComponent<WidgetProps<Character>> = ({ state, appControls: {update}, editMode }) => (\r\n  <table className='attribute-grid'>\r\n    <thead className='attribute-header'>\r\n      <tr>\r\n        <th className='attribute-title'> Name </th>\r\n        <th className='attribute-base'> Base </th>\r\n        <th className='attribute-skills'> Skills </th>\r\n        <th className='attribute-total'> Total </th>\r\n        <th className='attribute-dice'> Dice </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {GetDefaultAttributes().map((attribute) => (\r\n        <AttributeWidgetRow\r\n          updateCharacter={update}\r\n          editMode={editMode}\r\n          attribute={attribute}\r\n          character={state}\r\n          key={attribute.key}\r\n        />\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nconst AttributeWidgetRow: FunctionComponent<AttributeRowProps> = ({\r\n  attribute,\r\n  character,\r\n  editMode,\r\n  updateCharacter,\r\n}) => {\r\n  const baseValue = character.attributes.get(attribute);\r\n  let baseAttributeElement: ReactElement;\r\n  if (editMode)\r\n    baseAttributeElement = (\r\n      <input\r\n        type='number'\r\n        defaultValue={baseValue}\r\n        className={`attribute-base`}\r\n        onChange={(event) => {\r\n          const newVal = event.target.valueAsNumber;\r\n          if (!isNaN(newVal))\r\n            updateCharacter((oldChar: Character) => {\r\n              const newAttributes = new Map(oldChar.attributes);\r\n              newAttributes.set(attribute, newVal);\r\n              return { ...oldChar, attributes: newAttributes };\r\n            });\r\n        }}\r\n      />\r\n    );\r\n  else baseAttributeElement = <Fragment> {baseValue} </Fragment>;\r\n\r\n  return (\r\n    <tr className='attribute-row'>\r\n      <td className={`attribute-title ${attribute.name}`}>{attribute.name}</td>\r\n      <td className={`attribute-base ${attribute.name}`}> {baseAttributeElement} </td>\r\n      <td className={`attribute-skills ${attribute.name}`}>{GetAttributeSkillTotal(character, attribute)}</td>\r\n      <td className={`attribute-total ${attribute.name}`}>{GetAttributeTotal(character, attribute, true)}</td>\r\n      <td className={`attribute-dice ${attribute.name}`}>\r\n        {GetDiceFromAttributeTotal(GetAttributeTotal(character, attribute, true)).map((d) => d.name)} (\r\n        {GetDiceFromAttributeTotal(GetAttributeTotal(character, attribute, false)).map((d) => d.name)})\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport const AttributeWidgetConstructor: Widget<Character> = {\r\n    header: WidgetHeader ,\r\n    body: WidgetBody,\r\n    className: \"attribute-widget\",\r\n  };","import React, { FunctionComponent, Fragment } from 'react';\r\nimport { WidgetProps, Widget } from './Widget';\r\nimport { Skill, ToDie, NewSkill } from '../../Models/Skill';\r\nimport { AppControls } from '../../App';\r\nimport './SkillsWidget.css';\r\nimport { GetDefaultAttributes } from '../../Models/Attribute';\r\nimport { Character } from '../../Models/Character';\r\n\r\nconst WidgetHeader: FunctionComponent<WidgetProps<Character>> = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h5 className={'modal-title'}>Skills</h5>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WidgetBody: FunctionComponent<WidgetProps<Character>> = ({ state, editMode, appControls }) => {\r\n  return (\r\n    <Fragment>\r\n      <table className=\"skill-grid table-condensed\">\r\n        <thead className=\"skill-header\">\r\n          <tr>\r\n            <th className=\"skill-name\">Skill Name</th>\r\n            <th className=\"skill-level\"> Level </th>\r\n            <th className=\"skill-attribute\"> Attribute </th>\r\n            <th className=\"skill-dice\"> Dice </th>\r\n            <th className={'skill-delete'}> </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {state.skills.map((skill) =>\r\n            editMode\r\n              ? EditBodyRow(skill, {\r\n                  ...appControls,\r\n                  openDialog: () => null,\r\n                  remove: (pred) =>\r\n                    appControls.update((old) => ({ ...old, skills: old.skills.filter((s) => !pred(s)) })),\r\n                  update: (map) =>\r\n                    appControls.update((old) => ({\r\n                      ...old,\r\n                      skills: old.skills.map((s) => (s !== skill ? s : map(s)))\r\n                    }))\r\n                })\r\n              : WidgetBodyRow(skill)\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"skill-add\">\r\n        {editMode ? (\r\n          <button\r\n            className=\"btn btn-sm btn-success\"\r\n            onClick={() => {\r\n              appControls.update((old) => ({ ...old, skills: old.skills.concat(NewSkill(state)) }));\r\n            }}\r\n          >\r\n            Add new skill\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nfunction EditBodyRow(skill: Skill, { update, remove }: AppControls<Skill>): JSX.Element {\r\n  return (\r\n    <tr className={`skill-row ${skill.attribute.name}`} key={skill.key}>\r\n      <td className={`skill-name`}>\r\n        <input\r\n          className=\"skill-name-input\"\r\n          defaultValue={skill.name}\r\n          onBlur={(e) => {\r\n            const val = e.target.value;\r\n            return update((old) => ({ ...old, name: val }));\r\n          }}\r\n        ></input>{' '}\r\n      </td>\r\n      <td className=\"skill-level\">\r\n        <input\r\n          type=\"number\"\r\n          max={6}\r\n          min={2}\r\n          defaultValue={skill.level}\r\n          className={`skill-level`}\r\n          onChange={(event) => {\r\n            const newVal = event.target.valueAsNumber;\r\n            if (!isNaN(newVal))\r\n              update((old) => {\r\n                return { ...old, level: newVal };\r\n              });\r\n          }}\r\n        />\r\n      </td>\r\n      <td className={`skill-attribute`}>\r\n        <select\r\n          className=\"btn\"\r\n          defaultValue={skill.attribute.key}\r\n          onChange={(e) => {\r\n            const newval = GetDefaultAttributes().find((a) => a.key === Number(e.target.value));\r\n            if (newval) update((old) => ({ ...old, attribute: newval }));\r\n          }}\r\n        >\r\n          {GetDefaultAttributes().map((a) => (\r\n            <option value={a.key} key={a.key}>\r\n              {a.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </td>\r\n      <td className={`skill-dice`}> {ToDie(skill).name} </td>\r\n      <td className={'skill-delete'}>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-danger btn-sm btn\"\r\n          onClick={() =>\r\n            remove((old) => {\r\n              return old.key === skill.key;\r\n            })\r\n          }\r\n        >\r\n          x\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\nfunction WidgetBodyRow(skill: Skill): JSX.Element {\r\n  return (\r\n    <tr className={`skill-row ${skill.attribute.name}`} key={skill.key}>\r\n      <td className={`skill-name`}> {skill.name} </td>\r\n      <td className={`skill-level`}> {skill.level} </td>\r\n      <td className={`skill-attribute`}> {skill.attribute.name} </td>\r\n      <td className={`skill-dice`}> {ToDie(skill).name} </td>\r\n      <td className={'skill-delete'}> </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport const SkillsWidget: Widget<Character> = {\r\n  header: WidgetHeader,\r\n  body: WidgetBody,\r\n  className: 'skill-widget'\r\n};\r\n","import React, {  FunctionComponent } from \"react\";\r\n\r\nexport interface DropdownProps {\r\n    collection: selectOption[]\r\n}\r\n\r\ntype selectOption = {\r\n    name:string,\r\n    value:number\r\n}\r\n\r\nexport const Dropdown: FunctionComponent<DropdownProps> = ({collection}) => {\r\n    return (<select>\r\n        {collection.map(BuildOption)}\r\n    </select>)\r\n}\r\n\r\nfunction BuildOption(element:selectOption) { \r\nreturn (<option value={element.value} >{element.name}</option>)}\r\n\r\n\r\nexport const RemoveOption = <option value={-1} key={-1}> Remove </option>","import React, { FunctionComponent, Fragment } from 'react';\r\nimport { Widget, WidgetProps } from './Widget';\r\nimport { Character } from '../../Models/Character';\r\nimport { Blessing, GetDefaultBlessings } from '../../Models/Blessings';\r\nimport { Update } from '../../App';\r\nimport { Totem } from '../../Models/Totem';\r\nimport { GetDefaultFated } from '../../Models/Fated';\r\nimport { RemoveOption } from '../Controls/Dropdown';\r\n\r\nconst WidgetHeader: FunctionComponent<WidgetProps<Character>> = ({ state, editMode, appControls: { update } }) => {\r\n  const updateTotem: Update<Totem> = (t) => update((old) => ({ ...old, totem: t(old.totem) }));\r\n  const fatedDisplay = editMode\r\n    ? state.totem.fated.map((fated) => (\r\n        <select\r\n          className=\"btn\"\r\n          key={fated.key}\r\n          defaultValue={fated.key}\r\n          onChange={({ target: { value } }) => {\r\n            const newKey = Number.parseInt(value);\r\n            if (newKey === -1) {\r\n              updateTotem((old) => ({\r\n                ...old,\r\n                fated: old.fated.filter((x) => x !== fated)\r\n              }));\r\n            } else {\r\n              updateTotem((old) => ({\r\n                ...old,\r\n                fated: old.fated.map((x) =>\r\n                  x.key === fated.key ? GetDefaultFated().find((x) => x.key === Number.parseInt(value))! : x\r\n                )\r\n              }));\r\n            }\r\n          }}\r\n        >\r\n          {GetDefaultFated()\r\n            .filter((f) => !state.totem.fated.includes(f) || f.key === fated.key)\r\n            .map((f) => <option value={f.key} key={f.key}>{f.name}</option>)\r\n            .concat(RemoveOption)}\r\n        </select>\r\n      ))\r\n    : state.totem.fated.map((x) => x.name).join('/');\r\n\r\n  const addButton =\r\n    editMode && state.totem.fated.length < 3 ? (\r\n      <button\r\n        className=\"btn btn-sm btn-success\"\r\n        onClick={() => {\r\n          updateTotem((old) => ({\r\n            ...old,\r\n            fated: old.fated.concat(GetDefaultFated().filter((x) => !state.totem.fated.includes(x))[0])\r\n          }));\r\n        }}\r\n      >\r\n        +\r\n      </button>\r\n    ) : null;\r\n\r\n  return (\r\n    <div className={`header`}>\r\n      <h5 className={'modal-title'}>\r\n        {`Totem ${state.totem.fated.length > 0 ? ` - ` : ''}`}\r\n        {fatedDisplay}\r\n        {addButton}\r\n      </h5>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WidgetBody: FunctionComponent<WidgetProps<Character>> = ({ state, editMode, appControls: { update } }) => {\r\n  const updateTotem: Update<Totem> = (t) => update((old) => ({ ...old, totem: t(old.totem) }));\r\n  return (\r\n    <Fragment>\r\n      <table className=\"blessing-grid\">\r\n        <thead className=\"blessing-header\">\r\n          <tr>\r\n            <th className=\"blessing-name\"> Name </th>\r\n            <th className=\"blessing-fated\"> Fated </th>\r\n            <th className=\"blessing-level\"> Level </th>\r\n            <th className=\"blessing-effect\"> Effect </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {state.totem.blessings.map((b) =>\r\n            editMode ? EditBlessingsRow(b, state, updateTotem) : DisplayBlessingsRow(b)\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"blessing-add\">\r\n        {editMode ? (\r\n          <button\r\n            className=\"btn btn-sm btn-success\"\r\n            onClick={() => {\r\n              updateTotem((old) => ({\r\n                ...old,\r\n                blessings: old.blessings.concat(\r\n                  GetDefaultBlessings().filter(\r\n                    (x) => state.totem.fated.includes(x.fated) && !state.totem.blessings.includes(x)\r\n                  )[0]\r\n                )\r\n              }));\r\n            }}\r\n          >\r\n            Add new blessing\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nfunction EditBlessingsRow(blessing: Blessing, char: Character, updateTotem: Update<Totem>): JSX.Element {\r\n  const updateBlessings: Update<Blessing> = (b) =>\r\n    updateTotem((old) => ({ ...old, blessings: old.blessings.map((x) => (blessing.key === x.key ? b(x) : x)) }));\r\n  const removeBlessing = () =>\r\n    updateTotem((old) => ({ ...old, blessings: old.blessings.filter((x) => x.key !== blessing.key) }));\r\n  return (\r\n    <tr key={blessing.key} className={`blessing-row ${blessing.fated.attribute.name}`}>\r\n      <td className=\"blessing-name\">\r\n        <select\r\n          defaultValue={blessing.key}\r\n          className=\"btn\"\r\n          onChange={(e) => {\r\n            const newKey = Number.parseInt(e.target.value);\r\n            console.log(newKey);\r\n            updateBlessings(() => {\r\n              return GetDefaultBlessings().find((x) => x.key === newKey)!;\r\n            });\r\n          }}\r\n        >\r\n          {GetDefaultBlessings()\r\n            .filter((x) => (char.totem.fated.includes(x.fated) && !char.totem.blessings.includes(x)) || x.key === blessing.key)\r\n            .map((b) => (\r\n              <option value={b.key} key={b.key}>\r\n                {b.name}\r\n              </option>\r\n            ))}{' '}\r\n        </select>{' '}\r\n      </td>\r\n      <td className=\"blessing-fated\"> {blessing.fated.name} </td>\r\n      <td className=\"blessing-level\"> {blessing.level} </td>\r\n      <td className=\"blessing-effect\"> {blessing.effect} </td>\r\n      <td className={'blessing-delete'}>\r\n        <button type=\"button\" className=\"btn btn-outline-danger btn-sm btn\" onClick={removeBlessing}>\r\n          x\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction DisplayBlessingsRow(b: Blessing): JSX.Element {\r\n  return (\r\n    <tr key={b.key} className={`blessing-row ${b.fated.attribute.name}`}>\r\n      <td className=\"blessing-name\"> {b.name} </td>\r\n      <td className=\"blessing-fated\"> {b.fated.name} </td>\r\n      <td className=\"blessing-level\"> {b.level} </td>\r\n      <td className=\"blessing-effect\"> {b.effect} </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport const BlessingsWidget: Widget<Character> = {\r\n  header: WidgetHeader,\r\n  body: WidgetBody,\r\n  className: 'blessing-widget'\r\n};\r\n","import { Widget, WidgetProps } from './UI/Widgets/Widget';\r\nimport React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.scss';\r\nimport { Dialog, DialogParams, DialogSection } from './UI/Dialogs/Dialog';\r\nimport { CreateTestCharacter, Character, JsonToCharacter, CharacterToJson } from './Models/Character';\r\nimport { AttributeWidgetConstructor } from './UI/Widgets/AttributesWidget';\r\nimport { SkillsWidget } from './UI/Widgets/SkillsWidget';\r\nimport { BlessingsWidget } from './UI/Widgets/TotemWidget';\r\n\r\ntype AppState = {\r\n  ui: UIState<Character>;\r\n  model: ModelState;\r\n};\r\n\r\nexport interface ModelState {\r\n  character: Character;\r\n}\r\n\r\nexport interface AppControls<T> {\r\n  openDialog: openDialog<T>;\r\n  update: Update<T>;\r\n  remove: Delete<T>;\r\n}\r\n\r\nexport type openDialog<T> = (header: DialogSection<T>, body: DialogSection<T>) => void;\r\nexport type Update<T> = (update: (old: T) => T) => void;\r\nexport type Delete<T> = (update: (old: T) => boolean) => void;\r\n\r\nexport interface UIState<T> {\r\n  dialog: DialogParams<T>;\r\n}\r\n\r\nclass App extends React.Component<{}, AppState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    const savedData= localStorage.getItem('ToF-Model')\r\n    let model = null;\r\n\r\n    try {\r\n      model = savedData ? {character: JsonToCharacter( savedData )} : {character: CreateTestCharacter()};\r\n    }\r\n    catch {\r\n      if (!model) model = {character: CreateTestCharacter() };\r\n    }\r\n\r\n    this.state = {\r\n      model: model,\r\n      ui: {\r\n        dialog: {\r\n          isOpen: false,\r\n          body: () => null,\r\n          header: () => null,\r\n          model: model.character\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  updateUI: Update<UIState<Character>> = (map) => {\r\n    this.setState((state) => ({ ...state, ui: map(state.ui) }));\r\n  };\r\n\r\n  updateCharacter: Update<Character> = (map) => {\r\n    this.updateModel((model) => ({ ...model, character: map(model.character) }));\r\n  };\r\n\r\n  updateModel: Update<ModelState> = (map) => {\r\n    this.setState((state) => {\r\n      const newState: AppState = { ...state, model: map(state.model) };\r\n      localStorage.setItem('ToF-Model', CharacterToJson(newState.model.character));\r\n      return newState;\r\n    });\r\n  };\r\n\r\n  openDialog: openDialog<Character> = (header, body) => {\r\n    this.updateUI((uiState) => ({\r\n      ...uiState,\r\n      dialog: {\r\n        isOpen: true,\r\n        header: header,\r\n        body: body,\r\n        model: this.state.model.character\r\n      }\r\n    }));\r\n  };\r\n\r\n  AppControls: AppControls<Character> = {\r\n    openDialog: this.openDialog,\r\n    update: this.updateCharacter,\r\n    remove: () => {}\r\n  };\r\n\r\n  WidgetProps: () => WidgetProps<Character> = () => ({\r\n    appControls: this.AppControls,\r\n    state: this.state.model.character,\r\n    editMode: false\r\n  });\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App card-columns\">\r\n        {Widget(this.WidgetProps(), AttributeWidgetConstructor)}\r\n        {Widget(this.WidgetProps(), SkillsWidget)}\r\n        {Widget(this.WidgetProps(), BlessingsWidget)}\r\n        <Dialog updateUI={this.updateUI} appControls={this.AppControls} dialogState={this.state.ui.dialog} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}